open Graphics;;
let sCALAR = 3 ;;
let cIRCLE_SIZE = 13 ;;
let tEXT_SIZE = 44 ;;
let pi = 3.141592 ;;
let delta = int_of_float ((float_of_int cIRCLE_SIZE *. (sin (45. *. pi /. 180.))) /. 1.5)  ;;

let test_string = " " ^ string_of_int (500 * sCALAR + 4 * cIRCLE_SIZE) ^ "x" ^ string_of_int (340 * sCALAR + 4 * cIRCLE_SIZE);;
Graphics.open_graph test_string;;

let test_set = [(1, (39.32, 295.95));
(2, (96.36, 299.90));
(3, (125.06, 300.0));
(4, (140.91, 288.83));
(5, (183.02, 299.42));
(6, (20.24, 263.60));
(7, (32.32, 267.78));
(8, (94.26, 260.12));
(9, (106.54, 269.61));
(10, (121.83, 261.40));
(11, (123.91, 278.54));
(12, (166.40, 278.88));
(13, (193.01, 267.16));
(14, (210.57, 257.58));
(15, (226.05, 260.0));
(16, (239.65, 264.38));
(17, (244.95, 279.16));
(18, (285.16, 277.63));
(19, (303.66, 264.21));
(20, (325.19, 265.86));
(21, (380.14, 279.84));
(22, (399.58, 256.87));
(23, (433.20, 274.12));
(24, (5.88, 249.37));
(25, (17.39, 235.63));
(26, (45.72, 252.86));
(27, (62.71, 233.63));
(28, (84.62, 246.50));
(29, (129.36, 232.09));
(30, (147.69, 245.94));
(31, (192.62, 234.68));
(32, (197.53, 246.12));
(33, (222.27, 245.22));
(34, (233.59, 232.46));
(35, (245.87, 238.61));
(36, (250.03, 251.81));
(37, (255.49, 229.98));
(38, (260.03, 244.56));
(39, (270.79, 240.27));
(40, (331.22, 245.01));
(41, (355.02, 252.78));
(42, (370.68, 245.94));
(43, (0.0, 208.01));
(44, (32.30, 219.15));
(45, (56.65, 209.39));
(46, (64.40, 223.40));
(47, (86.48, 204.97));
(48, (94.80, 211.89));
(49, (141.06, 218.16));
(50, (167.69, 225.93));
(51, (176.36, 207.85));
(52, (198.46, 216.0));
(53, (213.94, 204.44));
(54, (219.42, 223.16));
(55, (245.47, 203.76));
(56, (287.02, 209.81));
(57, (314.02, 223.49));
(58, (367.46, 223.49));
(59, (22.46, 190.76));
(60, (36.05, 185.30));
(61, (78.92, 185.85));
(62, (107.24, 186.73));
(63, (134.44, 190.18));
(64, (144.64, 202.81));
(65, (154.83, 185.33));
(66, (164.65, 197.76));
(67, (193.35, 196.09));
(68, (233.38, 191.91));
(69, (267.55, 179.43));
(70, (287.19, 179.30));
(71, (308.53, 182.33));
(72, (329.86, 186.34));
(73, (340.07, 201.73));
(74, (357.25, 191.95));
(75, (374.62, 186.89));
(76, (385.76, 196.38));
(77, (424.47, 201.64));
(78, (57.38, 161.75));
(79, (61.92, 175.55));
(80, (88.35, 173.48));
(81, (105.91, 157.20));
(82, (123.10, 177.93));
(83, (155.75, 154.62));
(84, (179.36, 167.50));
(85, (225.24, 155.45));
(86, (226.76, 174.75));
(87, (299.08, 169.89));
(88, (321.36, 170.36));
(89, (344.77, 166.12));
(90, (358.56, 176.21));
(91, (361.38, 161.45));
(92, (378.94, 156.20));
(93, (394.62, 166.29));
(94, (408.98, 177.17));
(95, (22.44, 150.21));
(96, (49.44, 144.79));
(97, (75.50, 148.62));
(98, (130.44, 140.35));
(99, (180.67, 140.33));
(100, (197.47, 138.23))];;

let shift n = (4 - (String.length (string_of_int n))) * 4 - 1;;

List.iter (fun (i, (x,y)) ->
            let f x = (int_of_float (x +. 0.5)) * sCALAR in
            set_line_width 1;
            set_color black ;
            draw_circle (f x + 2 * cIRCLE_SIZE) (f y - 2 * cIRCLE_SIZE) cIRCLE_SIZE;
            moveto ((f x) + 1 * cIRCLE_SIZE + shift i) ((f y) - delta - 2 * cIRCLE_SIZE);
            set_color black ;
            draw_string (string_of_int i);
          ) test_set;;

read_line ();;